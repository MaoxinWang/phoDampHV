function [rho50,sigma_z] = rho_SA_PGA(input_T,input_Damp,typePair)

% Created by Mao-Xin Wang (maoxin_wang@hotmail.com or maoxin.wang@polyu.edu.hk)
% July 2023
%
% Predict correlation coefficient between H-H, H-V, or V-V pair of [SA,PGA]
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INPUT
%
%   input_T      = scalar or matrix of inputted period values (in units of s)
%   input_Damp   = scalar or matrix of inputted damping ratio values
%       (the above inputs must be in the same dimension)
%   typePair     = 'H-H' representing horizontal-horizontal SA-PGA correlation
%                = 'H-V' representing horizontal-vertical SA-PGA correlation
%                = 'V-H' representing vertical-horizontal SA-PGA correlation
%                = 'V-V' representing vertical-vertical SA-PGA correlation
%
% OUTPUT
%
%   rho50        = median correlation coefficient
%   sigma_z      = standard deviation of the z variable
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

X_min = [-4.605 	-0.693];
X_max = [2.303 	3.401];

%% specify model coefficients
switch typePair
    case 'H-H'
        W = [
            -7.323 	6.431 	1.180 	-10.254 	-1.923 	-10.000 	-16.976 	-2.482 	-4.766 	-0.031 	-0.896 	-1.569 	-7.687 	-2.093 	-3.364 	-4.474 	-1.441 	-6.341 	-1.534 	-1.786 	-28.367 	-5.544 	1.481 	-1.801 	-1.880 	-5.302 	-2.507 	-3.284 	6.421 	-4.259 	-2.441 	0.881
            -0.949 	-0.174 	-0.806 	1.775 	-0.239 	1.606 	-0.316 	0.237 	0.182 	1.575 	-0.888 	0.518 	0.203 	0.356 	-1.110 	0.094 	-1.142 	-0.977 	-1.481 	0.492 	0.211 	0.085 	-0.698 	-1.470 	2.004 	2.154 	-0.975 	-0.952 	-0.153 	-0.760 	0.825 	0.507
            ];
        W_prime = [
            0.043 	-0.135 	-0.548 	0.046 	-0.606 	-0.055 	-0.031 	-3.178 	0.264 	-0.102 	0.828 	2.217 	0.020 	5.443 	0.021 	-0.132 	-0.644 	-0.077 	0.020 	-2.642 	0.000 	-0.079 	1.772 	-0.024 	0.000 	0.008 	-0.149 	0.057 	-0.033 	0.010 	-0.038 	-0.338
            -6.735 	2.672 	-3.960 	-2.462 	10.029 	2.844 	0.202 	-4.782 	7.177 	2.181 	-3.237 	-2.899 	0.996 	-3.113 	-0.633 	8.001 	0.336 	10.905 	-2.168 	-5.653 	1.083 	4.958 	2.726 	2.455 	0.394 	-0.401 	5.589 	-5.957 	1.034 	-9.195 	-2.429 	5.659
            ];
        b = [
            -1.557 	-6.799 	-0.061 	-2.676 	1.784 	-2.637 	8.785 	-0.386 	-0.016 	-3.255 	-1.750 	0.418 	2.380 	-0.493 	0.278 	-1.765 	-2.447 	-1.437 	-0.504 	-0.457 	-6.102 	-4.130 	-0.386 	-0.475 	-1.792 	-5.361 	-1.878 	-2.373 	-4.796 	-1.095 	-1.809 	-0.889
            ];
        b_prime = [0.579 	-2.439];
    case 'H-V'
        W = [
            -13.772 	-10.085 	-3.247 	-6.895 	-9.546 	-1.209 	8.904 	7.562 	-7.970 	-6.586 	-2.066 	-4.461 	0.940 	-1.824 	1.883 	5.174 	3.812 	3.458 	-12.487 	5.878 	1.678 	-24.124 	-2.236 	11.736
            -0.046 	0.083 	0.198 	0.081 	-0.419 	-0.344 	-0.473 	0.340 	0.674 	-0.372 	-0.861 	0.527 	-0.107 	0.089 	0.052 	0.015 	0.013 	-0.511 	0.268 	0.127 	0.643 	-0.170 	0.163 	0.104
            ];
        W_prime = [
            -0.006 	-0.089 	0.989 	-0.338 	-0.270 	0.572 	-0.218 	-0.632 	-0.108 	-0.371 	0.270 	-0.208 	2.769 	2.669 	2.047 	-0.521 	-0.423 	-0.411 	-0.146 	0.202 	0.621 	-0.037 	-0.265 	-0.064
            -0.497 	-1.106 	-1.782 	-2.101 	-1.908 	-1.671 	-8.755 	-5.413 	-5.603 	-3.474 	-0.779 	-2.533 	0.018 	1.586 	1.058 	-3.425 	-6.756 	-3.581 	-3.936 	1.891 	-1.709 	-0.882 	-4.461 	-0.650
            ];
        b = [
            -8.987 	7.438 	4.060 	3.708 	1.268 	-0.338 	2.470 	-0.790 	-2.128 	0.365 	-1.261 	-0.463 	-1.260 	1.092 	-1.288 	-2.933 	0.897 	0.475 	-3.607 	2.130 	0.932 	-3.512 	-0.029 	-9.331
            ];
        b_prime = [1.435 	-1.752];
    case 'V-H'
        W = [
            -5.014 	-13.634 	4.813 	9.685 	14.060 	19.235 	19.505 	12.490 	-13.957 	0.054 	5.301 	-18.329 	-2.221 	-6.278 	1.522 	-2.162 	3.811 	-8.447 	3.332 	-3.748 	-1.445 	14.645
            0.205 	-0.318 	-0.037 	-0.274 	-0.006 	-0.636 	3.576 	-0.282 	0.363 	3.627 	-1.408 	-0.405 	-0.059 	0.203 	0.231 	-0.119 	-0.125 	-0.039 	-0.177 	-0.250 	0.077 	0.349
            ];
        W_prime = [
            -0.944 	-0.001 	0.281 	-1.113 	-0.031 	-0.001 	-0.001 	0.003 	-0.359 	-0.312 	-0.006 	-0.245 	-3.654 	-1.562 	-0.420 	2.694 	-0.319 	-0.320 	0.868 	-0.327 	4.262 	-0.361
            -1.158 	0.457 	3.530 	14.796 	1.077 	0.318 	0.034 	1.186 	5.452 	1.444 	0.126 	2.332 	8.914 	12.189 	8.511 	-3.150 	2.791 	0.652 	0.243 	6.395 	1.033 	2.856
            ];
        b = [
            -1.817 	1.228 	-0.692 	0.443 	-13.183 	-8.030 	-16.700 	2.737 	-0.563 	6.342 	0.166 	-9.852 	0.925 	-0.385 	-2.095 	0.730 	-2.559 	-4.712 	2.762 	4.105 	-0.354 	7.940
            ];
        b_prime = [0.865 	-2.421];
    case 'V-V'
        W = [
            5.124 	14.328 	3.489 	6.061 	4.868 	13.530 	6.033 	17.950 	-3.004 	5.207 	5.129 	2.749 	7.142 	4.891 	7.954 	-1.828 	-1.612 	-9.335 	-5.455 	-4.120 	-1.440 	-2.088 	-1.327 	0.863 	-27.104 	-7.197 	-1.592 	-1.632 	-5.018 	0.679
            0.405 	-1.845 	-0.073 	-0.027 	-0.903 	-1.834 	1.351 	0.577 	0.021 	-0.682 	0.161 	-0.004 	-0.059 	0.053 	0.753 	2.135 	1.646 	-0.142 	-0.274 	0.128 	-1.870 	-1.104 	-0.720 	-1.025 	0.463 	-0.023 	-1.826 	-0.479 	-1.427 	-1.038
            ];
        W_prime = [
            -0.008 	-0.099 	-0.634 	0.289 	0.115 	0.116 	0.020 	-0.005 	1.451 	-0.017 	1.011 	2.835 	-0.371 	-0.923 	-0.003 	0.004 	0.025 	0.253 	0.586 	0.905 	0.014 	-0.097 	-0.099 	-0.131 	-0.003 	-0.619 	0.012 	0.089 	0.002 	0.122
            10.125 	3.600 	-6.442 	-4.688 	-2.395 	-3.502 	-0.927 	0.191 	0.781 	-0.240 	0.028 	0.024 	2.076 	3.646 	-4.754 	-0.486 	-2.480 	-2.145 	-2.288 	-2.598 	1.018 	1.929 	3.272 	3.194 	-0.142 	5.224 	-1.340 	-3.259 	-0.186 	-5.073
            ];
        b = [
            3.961 	6.410 	1.869 	-3.269 	4.204 	6.055 	3.823 	2.859 	0.957 	-0.196 	2.338 	-1.542 	-3.428 	-3.349 	6.301 	-1.835 	-2.508 	7.883 	-2.405 	3.084 	-0.972 	-0.801 	-2.506 	0.711 	3.382 	5.820 	-0.988 	-0.493 	-0.749 	1.173
            ];
        b_prime = [0.605 	0.280];
end

%% predict median correlation coefficient and standard deviation
% ensure predictors are in vector form
[n_row,n_col] = size(input_T);
n_data = n_row*n_col;
x_T = reshape(input_T,n_data,1);
x_Damp = 100*reshape(input_Damp,n_data,1);

% normalize predictors (equation 10)
X_norm = 2*(log([x_T,x_Damp])-repmat(X_min,[n_data,1]))./(repmat(X_max-X_min,[n_data,1]))-1;

% make prediction using ANN (equation 12)
Y = (2./(1+exp(-2*(X_norm*W+repmat(b,[n_data,1]))))-1)*W_prime'+repmat(b_prime,[n_data,1]);

% make dimension of outputs consistent with that of inputs
rho50 = reshape(Y(:,1),n_row,n_col);
sigma_z = reshape(exp(Y(:,2)),n_row,n_col);

